---
title: "Subset Exploration"
---

```{r message=FALSE, warning=FALSE}
source(here::here("R/00-setup.R"))
```

## Summary

-   For this subset analysis, we will focus only on sites that were revisited and that have explicit information on the change in circumference (re-measured circumference or indicator why circumference was not re-measured).

## Set Classification Criteria

```{r}
# Classification of Tree Status 
# Primarily taken by VEGET Variable
code_veget5 <- 
  tibble(
    "0"  = "alive",
    "1"  = "alive",
    "2"  = "dead",
    "5"  = "dead",
    "A"  = "dead",
    "C"  = "dead",
    "M"  = "dead",
    "T"  = "dead",
    "6"  = "cut",
    "7"  = "cut",
    "N"  = "NA",
    "NA" = "NA"
  ) |> 
    pivot_longer(everything(),
                 names_to = "lvl",
                 values_to = "state")

# Classification for human inference

```

## Create Subsets

### Get tree all tree data indexed

```{r}
# Get raw data
data <- f_get_raw_data_list()
l_raw_data <- data[[1]]
l_metadata <- data[[2]]

# Wrangle coordinates
l_raw_data$placette <- f_attach_wgs_coords_to_raw_placette(l_raw_data$placette)

# Get location index
# idx_loc  <- f_get_location_index(l_raw_data)
idx_tre  <- f_get_tree_index(l_raw_data)
# idx_comb <- left_join(idx_tre, idx_loc, by = "idp")

# Get tree dataframe and attach indeces
df_treid <- 
  l_raw_data$arbre |>
  left_join(idx_tre, by = join_by(idp, a)) |> 
  mutate(
    tree_id  = paste0(idp, "_", a),
    visit_nr = NA,
    visit_nr = ifelse(revisit_state == "revisited" & campagne == visit_1, 1, visit_nr),
    visit_nr = ifelse(revisit_state == "revisited" & campagne == visit_2, 2, visit_nr),
    visit_nr = ifelse(revisit_state == "not_revisited", 1, visit_nr),
    visit_nr = ifelse(revisit_state == "newly_sampled", 2, visit_nr)
    ) |>
  relocate(idp, a, tree_id, campagne, visit_nr,
           visit_1, visit_2, revisit_state, veget, 
           veget5, where(is.numeric))
```

```{r}
df_loc_wide <- f_widen_location_data(l_raw_data$placette)
```

### First visits 2010 or after

#### Revisited trees

```{r}
# Filter data
df_2010 <- df_treid |> filter(visit_1 > 2009 & revisit_state == "revisited")

# Make df wide
vars_location_tree <- f_get_fixed_vars_per_level(level = "location_tree")
vars_to_keep  <- df_2010 |> select(any_of(vars_location_tree)) |>  names()
vars_to_widen <- df_2010 |> select(-any_of(vars_location_tree)) |>  names()

df_wide <- 
  df_2010 |> 
  # arrange(tree_id) |> slice(1:1000) |> 
  pivot_wider(
    id_cols = vars_to_keep,
    names_from  = visit_nr,
    values_from = vars_to_widen) |> 
  select(-where(~all(is.na(.)))) |> 
  rename_with(~ gsub("_1$", "", .), ends_with("_1")) |> 
  rename_with(~ gsub("_2$", "5", .), ends_with("_2")) |> 
  rename(veget5 = veget55)
  
# Attach location data and keep only relevant variabes
irr_vars <- f_get_list_of_irrelevant_vars()
irr_vars <- c(irr_vars, paste0(irr_vars, "5"))

df_revisited <- 
  left_join(df_wide, df_loc_wide) |> 
  select(-any_of(irr_vars))

# Separate dataset into revisited trees that had c13 measured twice
df_revisited <- df_revisited |> mutate(d_c13 = c13 - c135)

df_rev_once  <- df_revisited |> filter(is.na(d_c13)) 
df_rev_twice <- df_revisited |> filter(!is.na(d_c13))
```

##### Trees with one c13 measurement

TODO

##### Trees with two c13 measurements

```{r}
df_rev_twice 
```

### Trees that were newly recruited

```{r}
idx_new <- idx_tre |> filter(revisit_state == "newly-sampled")
df_new  <- df_sub |> filter(idp %in% idx_new$idp)

time
```

------------------------------------------------------------------------

## Get Clean Dataset

### Load Data

```{r}
# Get raw data
data <- f_get_raw_data_list()
l_raw_data <- data[[1]]
l_metadata <- data[[2]]

# Wrangle coordinates
l_raw_data$placette <- f_attach_wgs_coords_to_raw_placette(l_raw_data$placette)

# Get location index
index <- f_get_location_index(l_raw_data)
```

### Filter Data

Keep only sites that were visited twice and for which there is tree data.

```{r}
index_subset <- index |> filter(n_visits_loc == 2, n_visits_tre != 0)
```

Some sites might have only recorded tree data once during two visits. Reasons are:

-   Old re-visiting strategy (revisits up to 2014) did not re-measure each tree but only gave general assessment of state of plot. Where the entire plot was affected by the same change (no change, removal, mortality), there was only a remark made in the location data.

-   New re-visiting strategy also focused on sampling new trees that were not there during the first visit.

```{r}
# Get sites for which there was no tree data recorded at second visit
df_tmp <- 
  l_raw_data$arbre |> 
  inner_join(index_subset, by = c("idp")) |> 
  filter(n_visits_tre == 1) |> 
  select(idp, campagne, v1, v2) |> 
  rename(yr_tree_visit = campagne) |>  
  distinct()

df_new_trees   <- df_tmp |> filter(yr_tree_visit == v2)
df_old_method  <- df_tmp |> filter(yr_tree_visit == v1)
```

We want to focus on attaching the state of change for each tree that has not been re-measured during the second visit. For this, we use the information given in the location data on the second visit.

Notes:

-   In most cases, there was no change in tree cover. But in a few cases, we have information that there was an incident that affected the tree cover (given by `incid`) but there is no information on the type of incident (given by `nincid`).

```{r}
df_tre <- 
  l_raw_data$arbre |> 
  filter(idp %in% df_old_method$idp) |> 
  select(where(~!all(is.na(.)))) # drop all columns with NA

df_loc <- 
  l_raw_data$placette |> 
  filter(idp %in% df_old_method$idp,
         visite == 2) |> 
  select(where(~!all(is.na(.)))) # drop all columns with NA

cat("Variables with information on second visit: ", paste0(names(df_loc), collapse = ", "))

```

```{r}
#| layout-nrow: 1
df_loc$incid   |> table() |> barplot(main = "Count of incid",
                                     sub  = "Indicator characterizing the intensity of the incident occurring\nin the last 5 years on the point")
df_loc$prelev5 |> table() |> barplot(main = "Count of prelev5",
                                     sub  = "Indicator indicating the presence of a partial (1) or total (2) cutting\nof the trees surveyed during the 1st visit")
```

```{r}
sites_without_change <- df_loc |> filter(prelev5 == 0, incid == 0)
```

```{r}
sites_fully_cut <- df_loc |> filter(prelev5 == 2)
sites_fully_cut$incid   |> table() |> barplot(main = "Count of incid")
```

```{r}
sites_partially_cut  <- df_loc |> filter(prelev5 == 1)
```

### Clean Data

-   Certain sites in the old sampling scheme

-   For sites from 2005-2014, we have no re-meausrement of the C13 data. Thus, we have to use the location data to see whether these trees were still standing or not, and coalesce the data to a common format where we have two-recordings per tree, indicating whether it was removed, dead, cut at the second visit.

-   Some trees measured in 2005 were actually revisited and each tree's vegetation state was recorded. BUT some trees were not explicitly revisited but just note down as the location being cut, partially cut, not cut.

## Map
